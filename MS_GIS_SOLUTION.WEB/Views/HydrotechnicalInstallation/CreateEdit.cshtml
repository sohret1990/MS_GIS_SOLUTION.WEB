@model Obj06ViewModel
@{
    ViewData["Title"] = (Model.IdHydrotechnicalInstallations <= 0 || Model.IdHydrotechnicalInstallations == null) ? "Yeni hidrotexniki qurğu" : "Hidrotexniki qurğu məlumatları üzərində düzəliş";

    if (Model.Mode == true)
    {
        ViewData["Title"] = "Ətraflı məlumat";
    }
}
@section Scripts
    {
    <script type="text/javascript">

        function onContentReady(e) {
            GetPhotoPartial();
        }


        function GetPhotoPartial() {
            if (document.getElementById('galleryPartial') == null) {
                var documenturi = '@Url.Action("GetPhotoPartial", "HydrotechnicalInstallation", new { globalId = Model.GlobalId })';

                $.ajax({
                    url: documenturi,
                    type: 'GET',
                    async: true,
                    dataType: 'html',
                    beforeSend: function () {
                        showLoadPanel();
                    },
                    success: function (result) {
                        $("#main").html('');
                        $("#main").html(result);
                    },
                    complete: function () {
                        hideLoadPanel();
                    }
                });
            }

        }

        function showLoadPanel() {
            let panel = $('#loadPanel').dxLoadPanel('instance');
            panel.show();
        }

        function hideLoadPanel() {
            let panel = $('#loadPanel').dxLoadPanel('instance');
            panel.hide();
        }

        function UploadFile(e) {
            e.component.option("uploadUrl", '@Url.Action("UploadFile", "HydrotechnicalInstallation")' + '?globalId=@Model.GlobalId');
            var grid = $("#gridFileContainer").dxDataGrid('instance');
            grid.refresh();
        }

        function FileUploaded(e) {
            e.component.reset();
            var documenturi = '@Url.Action("GetPhotoPartial", "HydrotechnicalInstallation", new { globalId = Model.GlobalId })';

                $.ajax({
                    url: documenturi,
                    type: 'GET',
                    async: true,
                    dataType: 'html',
                    beforeSend: function () {
                        showLoadPanel();
                    },
                    success: function (result) {
                        $("#main").html('');
                        $("#main").html(result);
                    },
                    complete: function () {
                        hideLoadPanel();
                    }
                });
            notify('success', "Əməliyyat uğurla yerinə yetirildi!", 2000, null);

        }

        function onContentReadyFU(e) {

            e.element.find(".dx-fileuploader-button").dxButton("instance").option("icon", "plus");
        }

        function onDownloadFile(e) {
            var root = "@Url.Action("DownloadFile", "HydrotechnicalInstallation")";
            location.href = root + '?attachmentId=' + e.row.data.Attachmentid;
        }

        var iconImage = '<i class="dx-icon dx-icon-image dx-icon-custom-style"></i>';
        function cellTemplateReplace(cellElement, cellInfo) {
            cellElement.append(iconImage);
        }


        function getSourceType() {
            return $('#SourceType').dxSelectBox('instance').option('value');
        }

        function onSourceTypeValueChange(e) {
            $('#Source').dxSelectBox('instance').option('value', null);
            $('#Source').dxSelectBox('instance').getDataSource().reload();
        }

    </script>

    <style type="text/css">
        .dx-form-group-caption {
            font-weight: bold;
        }
    </style>
}

@(
    Html.DevExtreme().LoadPanel().ID("loadPanel").Shading(true).ShadingColor("rgba(0,0,0,0.4)").ShowIndicator(true).Position(m=>m.Of("#tabss"))
.ShowPane(true)
.CloseOnOutsideClick(false)
    )

<partial name="_ArcgisCreateEdit" view-data='@new ViewDataDictionary(ViewData) { { "service-id", 4 }, { "geometry-type", "polygon" }, {"object-id", Model.Objectid ?? 0 } }' />


<div class="row">
    <div class="col-md-12">
        <div class="card card-outlined style-primary">
            <!--end .card-head -->
            <div class="card-body">
                <Form asp-action="Save" method="post" onsubmit="return checkBeforeSubmit()" class="tx-form" enctype="multipart/form-data">
                    <input asp-for="IdHydrotechnicalInstallations" type="hidden" />
                    @using (Html.DevExtreme().ValidationGroup())
                    {
                        @(Html.DevExtreme().Form<Obj06ViewModel>().ID("form").ReadOnly(Model.Mode).ShowValidationSummary(false).Items(items =>
            {
            items.AddGroup().CssClass("first-group").Caption((Model.Mode == true) ? "Ətraflı məlumat" : (Model.IdHydrotechnicalInstallations <= 0 || Model.IdHydrotechnicalInstallations == null) ? "Yeni hidrotexniki qurğu" : "Hidrotexniki qurğu məlumatları üzərində düzəliş").ColCount(3).Items
                (x =>
                {
                x.AddSimpleFor(m => m.Name).Editor(e => e.TextBox()).Label(e => e.Text("Ad")).IsRequired(true);
                x.AddSimpleFor(m => m.FkIdAdminUnit).Editor(e => e.SelectBox().FillWithAdminUnit()).Label(e => e.Text("Yerləşdiyi ərazi"));
                x.AddSimpleFor(m => m.FkIdSourceType).Editor(e => e.SelectBox().ID("SourceType").OnValueChanged("onSourceTypeValueChange").FillWithSourceType()).Label(e => e.Text("Su mənbəyi növü"));
                x.AddSimpleFor(m => m.FkIdSource).Editor(e => e.SelectBox().ID("Source").FillWithSource(new { sourceType = new JS("getSourceType") })).Label(e => e.Text("Su mənbəyi"));
                x.AddSimpleFor(m => m.FkIdActivityStatus).Editor(e => e.SelectBox().FillWithActivityStatus()).Label(e => e.Text("Fəaliyyətdə olub-olmaması"));
                x.AddSimpleFor(m => m.FkIdTechnicalStatus).Editor(e => e.SelectBox().FillWithTechnicalStatus()).Label(e => e.Text("Texniki vəziyyət"));
                x.AddSimpleFor(m => m.FkIdOwnershipType).Editor(e => e.SelectBox().FillWithOwnershipType()).Label(e => e.Text("Mülkiyyət növü"));
                x.AddSimpleFor(m => m.FkIdOwner).Editor(e => e.SelectBox().FillWithOwner()).Label(e => e.Text("Mülkiyyətçisi"));
                x.AddSimpleFor(m => m.FkIdHtiNetworkType).Editor(e => e.SelectBox().FillWithHTINetworkType()).Label(e => e.Text("Qurğu şəbəkə növü"));
                x.AddSimpleFor(m => m.FkIdHtInstallationType).Editor(e => e.SelectBox().FillWithHTIInstallationType()).Label(e => e.Text("Qurğu tipləri"));
                x.AddSimpleFor(m => m.ExploitationDate).Editor(editor => editor.NumberBox().ShowSpinButtons(true)
    .ShowClearButton(true).Min(0)).Label(e => e.Text("İstismara verildiyi tarix(il)"));
                x.AddSimpleFor(m => m.WaterPermeability).Editor(editor => editor.NumberBox().ShowSpinButtons(true)
                    .ShowClearButton(true).Min(0)).Label(e => e.Text("Su keçirmə qabiliyyəti (m³/san)"));
                x.AddSimpleFor(m => m.Depth).Editor(editor => editor.NumberBox().ShowSpinButtons(true)
            .ShowClearButton(true).Min(0)).Label(e => e.Text("Dərinliyi (m)"));x.AddEmpty().ColSpan(2);
                x.AddSimpleFor(m => m.TechnicalParameters).Editor(editor => editor.TextArea()).Label(e => e.Text("Texniki parametrlər")).ColSpan(3);
                x.AddSimpleFor(m => m.Description).Editor(editor => editor.TextArea()).Label(e => e.Text("Qeyd")).ColSpan(3);
                x.AddSimpleFor(m => m.Objectid).Editor(e => e.NumberBox().Visible(false)).Label(x => x.Visible(false)).ColSpan(3);
                x.AddGroup().Template(@<text>@Html.AddButtonPanel(Model.ButtonPanel)</text>).ColSpan(3);
                    x.AddGroup().Template(@<text><div id="tabss" class="row">
                        @Html.DevExtreme().TabPanel().FocusStateEnabled(false).DeferRendering(true).Width("100%").ActiveStateEnabled(IsLayoutBeingRendered).Items(x =>
                   {
                       x.Add().Title("Şəkillər").Icon("photo").Template(new TemplateName("photos"));
                   })
                    </div></text>).ColSpan(3);
                    });
}).FormData(Model).OnContentReady("onContentReady").ShowValidationSummary(true).ShowColonAfterLabel(true).ShowOptionalMark(true).ShowRequiredMark(true))

                    }

                    @using (Html.DevExtreme().NamedTemplate("photos"))
                    {
                        <table>
                            <tr>
                                <td>
                                    <div class="row">
                                        <div class="col-12 p-3">
                                            <div id="main"></div>

                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <div class="row" id="form-container">
                                        <div class="col-12">

                                            <div class="row">
                                                <div class="col-12 text-center">
                                                    <img id="imgAttachment" class="img rounded" width="50" height="120" src="~/images/icons/attachment5.jpg" />
                                                </div>
                                            </div>

                                            <div class="row">
                                                <div class="col-12 text-center">
                                                    @(Html.DevExtreme().FileUploader().ID("fileUploaderContainer")
                .Name("File")
                .SelectButtonText("Şəkil əlavə et").OnValueChanged("UploadFile")
                .OnUploaded("FileUploaded").OnContentReady("onContentReadyFU").Disabled(Model.Mode)
                .LabelText("")
                .UploadMode(FileUploadMode.Instantly)
                )
                                                </div>
                                            </div>

                                            <div class="row">
                                                <div class="col-12 text-center">
                                                    @(Html.DevExtreme().DataGrid().Disabled(Model.Mode)
                .ID("gridFileContainer")
                .ShowBorders(false).Editing(e => e.UseIcons(true)
                .AllowAdding(false)
                .AllowDeleting(true)
                .AllowUpdating(false)).RemoteOperations(true).WordWrapEnabled(true).Paging(p => p.PageSize(5))
                .DataSource(
                ds => ds.Mvc().Controller("HydroTechnicalInstallation")
                .LoadAction("LoadHydroTechnicalInstallationFiles")
                .LoadMethod("GET")
                .DeleteAction("DeleteHydroTechnicalInstallationFile")
                .DeleteMethod("Delete")
                .Key("Attachmentid").LoadParams(new { RelGlobalId = Model.GlobalId }))
                .Columns(c => {
                    c.Add().DataField("AttName").Caption("Faylın adı");
                    c.Add().DataField("ContentType").Caption("Faylın tipi").CellTemplate(new JS("cellTemplateReplace"));
                    c.Add().DataField("DataSize").Caption("Faylın ölçüsü");
                    c.Add()
                    .Type(GridCommandColumnType.Buttons)
                    .Width(110)
                    .Buttons(b =>
                    {
                        b.Add().Name(GridColumnButtonName.Delete);
                        b.Add()
                    .Hint("Faylı endir")
                    .Icon("download")
                    .OnClick("onDownloadFile");
                    });
                })
                )
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                </td>
                            </tr>
                        </table>

                    }


                </Form>
            </div><!--end .card-body -->
        </div><!--end .card -->
        @*<em class="text-caption">Outlined Card with icon</em>*@
    </div><!--end .col -->
</div>





