@model Obj03CollectorAdminUnitViewModel
@{
    ViewData["Title"] = Model.IdCollectorAdminUnit <= 0 ? "Yeni rayon" : "Rayon məlumatları üzərində düzəliş";
}

<partial name="_ArcgisCreateEdit" view-data='@new ViewDataDictionary(ViewData) { { "service-id", 3 }, { "geometry-type", "polyline" }, {"object-id", Model.Objectid??0 } }' />

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <form asp-action="SaveCollectorAdminUnit" onsubmit="return checkBeforeSubmit()" method="post" class="tx-form">
                    <input asp-for="IdCollectorAdminUnit" type="hidden" />
                    <input asp-for="FkIdCollector" type="hidden" />
                    @using (Html.DevExtreme().ValidationGroup())
                    {
                        @(Html.DevExtreme().Form<Obj03CollectorAdminUnitViewModel>().ID("adminunitform").ReadOnly(Model.Mode).ShowValidationSummary(false).Items(items =>
                    {
                    items.AddGroup().Caption
                          (Model.Mode == true ? "Ətraflı məlumat"
                        : (Model.IdCollectorAdminUnit <= 0 ? (Model.Name + " adlı kollektor-drenaj şəbəkəsinə aid yeni məlumat")
                        : (Model.Name + " adlı kollektor-drenaj şəbəkəsinin məlumatları üzərində düzəliş"))).ColCount(2).Items(x =>
                        {
                        x.AddSimpleFor(m => m.FkIdAdminUnit).Editor(e => e.SelectBox().ID("AdminUnit").OnValueChanged("onAdminUnitValueChange").FillWithAdminUnit()).Label(e => e.Text("Rayon"));
                        x.AddSimpleFor(m => m.OrderNo).Editor(editor => editor.NumberBox().ShowSpinButtons(true)
    .ShowClearButton(true).Min(0)).Label(e => e.Text("Sıra nömrəsi"));
                        x.AddSimpleFor(m => m.FkIdOwner).Editor(e => e.SelectBox().FillWithOwner()).Label(e => e.Text("Mülkiyyətçisi"));
                        x.AddSimpleFor(m => m.FkIdOwnershipType).Editor(e => e.SelectBox().FillWithOwnershipType()).Label(e => e.Text("Mülkiyyət növü"));
                        x.AddSimpleFor(m => m.FkIdActivityStatus).Editor(e => e.SelectBox().FillWithActivityStatus()).Label(e => e.Text("Fəaliyyətdə olub-olmaması"));
                        x.AddSimpleFor(m => m.DrainedArea).Editor(editor => editor.NumberBox().ShowSpinButtons(true)
    .ShowClearButton(true).Min(0)).Label(e => e.Text("Drenləşmiş sahə(ha)"));
                        x.AddSimpleFor(m => m.FkIdTechnicalStatus).Editor(e => e.SelectBox().FillWithTechnicalStatus()).Label(e => e.Text("Texniki vəziyyət"));
                        x.AddSimpleFor(m => m.Capacity).Editor(editor => editor.NumberBox().ShowSpinButtons(true)
    .ShowClearButton(true).Min(0)).Label(e => e.Text("Su sərfi (m³/s)"));
                        x.AddSimpleFor(m => m.ProtectionZoneArea).Editor(editor => editor.NumberBox().ShowSpinButtons(true)
    .ShowClearButton(true).Min(0)).Label(e => e.Text("Mühafizə zonasının eni(m)"));
                        x.AddSimpleFor(m => m.ActualLength).Editor(editor => editor.NumberBox().ShowSpinButtons(true)
    .ShowClearButton(true).Min(0)).Label(e => e.Text("Layihə üzrə uzunluq(km)"));
                        x.AddSimpleFor(m => m.Length).Editor(editor => editor.NumberBox().ShowSpinButtons(true).ReadOnly(true)
       .ShowClearButton(true).Min(0)).Label(e => e.Text("Coğrafi uzunluq(km)"));
                        x.AddSimpleFor(m => m.DeviceCount).Editor(editor => editor.NumberBox().ShowSpinButtons(true)
                        .ShowClearButton(true).Min(0)).Label(e => e.Text("Üzərindəki qurğuların sayı"));
                        x.AddSimpleFor(m => m.WUAIdList).Editor(e => e.TagBox().ID("WUAs").LoadWithWaterUseAssociationByAdminUnit(new { AdminUnitId = new JS("getAdminUnit") })).Label(e => e.Text("Xidmət etdiyi SİB-lər"));
                        x.AddSimpleFor(m => m.Objectid).Editor(e => e.NumberBox().Visible(false)).Label(x => x.Visible(false));
                        x.AddGroup().Template(@<text>@Html.AddButtonPanel(Model.ButtonPanel)</text>).ColSpan(2);

                    });
                    }).FormData(Model).ShowValidationSummary(true))
                    }
                </form>
            </div><!--end card-body-->
        </div><!--end card-->
    </div><!--end col-->
</div>

<script type="text/javascript">
    function getAdminUnit() {
        return $('#AdminUnit').dxSelectBox('instance').option('value');
    }

    function onAdminUnitValueChange(e) {

        $('#WUAs').dxTagBox('instance').option('value', []);
        $('#WUAs').dxTagBox('instance').getDataSource().reload();
        $('#WUAs').dxTagBox('instance').option('disabled', e.component.option('value').length === 0);
    }
</script>
